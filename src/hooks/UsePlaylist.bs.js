// Generated by ReScript, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as React from "react";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as Pervasives from "bs-platform/lib/es6/pervasives.js";

function reducer(state, action) {
  if (typeof action === "number") {
    if (action !== 0) {
      return {
              currentSong: state.currentSong,
              nextSong: state.nextSong,
              currentDj: state.currentDj,
              currentBatchIndex: state.currentBatchIndex,
              currentSongIndex: (state.currentSongIndex + 1 | 0) === Caml_array.get(state.mergedPlaylist, state.currentBatchIndex).length ? 0 : state.currentSongIndex + 1 | 0,
              mergedPlaylist: state.mergedPlaylist,
              individualPlaylists: state.individualPlaylists
            };
    } else {
      return {
              currentSong: state.currentSong,
              nextSong: state.nextSong,
              currentDj: state.currentDj,
              currentBatchIndex: (state.currentBatchIndex + 1 | 0) === state.mergedPlaylist.length ? 0 : state.currentBatchIndex + 1 | 0,
              currentSongIndex: state.currentSongIndex,
              mergedPlaylist: state.mergedPlaylist,
              individualPlaylists: state.individualPlaylists
            };
    }
  }
  var song = action._1;
  var playlist = action._0;
  return {
          currentSong: state.currentSong,
          nextSong: state.nextSong,
          currentDj: state.currentDj,
          currentBatchIndex: state.currentBatchIndex,
          currentSongIndex: state.currentSongIndex,
          mergedPlaylist: state.mergedPlaylist,
          individualPlaylists: List.map((function (pl) {
                  if (pl.dj === playlist.dj) {
                    return {
                            dj: pl.dj,
                            songs: Pervasives.$at(pl.songs, {
                                  hd: song,
                                  tl: /* [] */0
                                })
                          };
                  } else {
                    return pl;
                  }
                }), state.individualPlaylists)
        };
}

var initialState_mergedPlaylist = [];

var initialState = {
  currentSong: undefined,
  nextSong: undefined,
  currentDj: undefined,
  currentBatchIndex: 0,
  currentSongIndex: 0,
  mergedPlaylist: initialState_mergedPlaylist,
  individualPlaylists: /* [] */0
};

function make(playlist) {
  var match = React.useReducer(reducer, initialState);
  var state = match[0];
  return {
          mergedPlaylist: state.mergedPlaylist,
          individualPlaylists: state.individualPlaylists,
          currentSong: state.currentSong,
          nextSong: state.nextSong,
          currentDj: state.currentDj
        };
}

export {
  reducer ,
  initialState ,
  make ,
  
}
/* react Not a pure module */
